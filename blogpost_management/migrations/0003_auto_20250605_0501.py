# Generated by Django 3.2.25 on 2025-06-05 05:01

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('user_management', '0001_initial'),
        ('blogpost_management', '0002_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='blogpostmodel',
            name='event_status',
            field=models.CharField(choices=[('Ongoing', 'Ongoing'), ('Ended', 'Ended')], default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('created_at_epoch', models.IntegerField(null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=255, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField()),
                ('event_type', models.CharField(blank=True, max_length=100, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='user_management.users')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogpost_management.status')),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('created_at_epoch', models.IntegerField(null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=255, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=255, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the comment.', primary_key=True, serialize=False, unique=True)),
                ('text', models.TextField(blank=True, help_text='Comment of the blog post.', null=True)),
                ('blog_post', models.ForeignKey(help_text='Blog Post on which comment will be added', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blogpost_management.blogpostmodel')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogpost_management.status')),
                ('user', models.ForeignKey(help_text='User who authored the blog post.', on_delete=django.db.models.deletion.CASCADE, related_name='c_user', to='user_management.users')),
            ],
            options={
                'db_table': 'comment_table',
            },
        ),
    ]
